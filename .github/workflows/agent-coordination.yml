name: Multi-Agent Development Coordination

on:
  schedule:
    - cron: '*/15 * * * *'  # Check every 15 minutes
  workflow_dispatch:
    inputs:
      agent_action:
        description: 'Agent coordination action'
        required: true
        default: 'status'
        type: choice
        options:
          - status
          - claim
          - release
          - force-release

env:
  AGENT_LOCK_DURATION: 1800  # 30 minutes in seconds

jobs:
  agent-status:
    name: Agent Status Monitor
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event.inputs.agent_action == 'status'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check agent activity
      run: |
        echo "ü§ñ Multi-Agent Status Report"
        echo "============================="
        
        # Check for active branches by agents
        AGENT_BRANCHES=$(git branch -r | grep -E "(agent|claude|ai|bot)" | head -10 || echo "None")
        echo "Agent Branches: $AGENT_BRANCHES"
        
        # Check recent commits by potential agents
        RECENT_AGENTS=$(git log --since="2 hours ago" --pretty=format:"%an" | sort -u | grep -E "(bot|agent|claude|ai)" || echo "None")
        echo "Recent Agent Activity: $RECENT_AGENTS"
        
        # Check for coordination files
        if [ -f ".agent-lock" ]; then
          LOCK_TIME=$(cat .agent-lock)
          CURRENT_TIME=$(date +%s)
          TIME_DIFF=$((CURRENT_TIME - LOCK_TIME))
          echo "Agent Lock: Active (${TIME_DIFF}s ago)"
        else
          echo "Agent Lock: None"
        fi
        
        # Check for pending PRs from agents
        echo "üìã Coordination Recommendations:"
        echo "- Use 'claim' action before starting work"
        echo "- Use 'release' action when finished"
        echo "- Check this status before major changes"

  claim-workspace:
    name: Claim Workspace
    runs-on: ubuntu-latest
    if: github.event.inputs.agent_action == 'claim'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Claim workspace
      run: |
        if [ -f ".agent-lock" ]; then
          LOCK_TIME=$(cat .agent-lock)
          CURRENT_TIME=$(date +%s)
          TIME_DIFF=$((CURRENT_TIME - LOCK_TIME))
          
          if [ $TIME_DIFF -lt $AGENT_LOCK_DURATION ]; then
            echo "::error::Workspace is currently claimed by another agent"
            echo "::error::Lock expires in $((AGENT_LOCK_DURATION - TIME_DIFF)) seconds"
            exit 1
          fi
        fi
        
        # Create claim file
        echo $(date +%s) > .agent-lock
        echo "github-actions-${{ github.run_id }}" > .agent-id
        
        echo "::notice::Workspace claimed successfully"
        echo "::notice::Lock expires in $AGENT_LOCK_DURATION seconds"
        
    - name: Commit claim
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .agent-lock .agent-id
        git commit -m "chore: Claim workspace for agent coordination" || true
        git push origin main || true

  release-workspace:
    name: Release Workspace
    runs-on: ubuntu-latest
    if: github.event.inputs.agent_action == 'release' || github.event.inputs.agent_action == 'force-release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Release workspace
      run: |
        if [ "${{ github.event.inputs.agent_action }}" = "force-release" ]; then
          echo "::warning::Force releasing workspace"
        else
          # Verify ownership before release
          if [ -f ".agent-id" ]; then
            CLAIM_ID=$(cat .agent-id)
            if [ "$CLAIM_ID" != "github-actions-${{ github.run_id }}" ]; then
              echo "::warning::Workspace claimed by different agent: $CLAIM_ID"
            fi
          fi
        fi
        
        # Remove claim files
        rm -f .agent-lock .agent-id
        
        echo "::notice::Workspace released successfully"
        
    - name: Commit release
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add -A
        git commit -m "chore: Release workspace after agent coordination" || true
        git push origin main || true

  coordination-health:
    name: Coordination Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Health check
      run: |
        echo "üîç Agent Coordination Health Check"
        echo "=================================="
        
        # Check for stale locks
        if [ -f ".agent-lock" ]; then
          LOCK_TIME=$(cat .agent-lock)
          CURRENT_TIME=$(date +%s)
          TIME_DIFF=$((CURRENT_TIME - LOCK_TIME))
          
          if [ $TIME_DIFF -gt $AGENT_LOCK_DURATION ]; then
            echo "::warning::Stale agent lock detected (${TIME_DIFF}s old)"
            rm -f .agent-lock .agent-id
            
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: Clean up stale agent lock" || true
            git push origin main || true
            
            echo "::notice::Stale lock cleaned up"
          fi
        fi
        
        # Check for merge conflicts in open PRs
        echo "üìã Open PR Conflict Check..."
        
        # Check for multiple agents working on same files
        RECENT_FILES=$(git log --since="1 hour ago" --name-only --pretty=format: | sort -u)
        if [ -n "$RECENT_FILES" ]; then
          echo "Recent file changes detected:"
          echo "$RECENT_FILES"
        fi